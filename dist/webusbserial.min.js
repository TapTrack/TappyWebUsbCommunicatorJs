function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,n){"function"==typeof define&&define.amd?define([],n):"object"===("undefined"==typeof exports?"undefined":_typeof(exports))?module.exports=n():e.WebUSBSerialCommunicator=n()}(this,function(){var e=[{vendorId:1027,productId:24577},{vendorId:1240,productId:83}];function c(e,n,t){var o=this;o.host=n,o.device=e,o.cancelled=!1,o.debugLogger=t}function t(e){var i=this;if(null==e||"object"!==_typeof(e.device))throw new Error("Must specify a device");i.device=e.device,null!=e&&"boolean"==typeof e.debug&&e.debug?i.debugLog=function(){console.log.apply(this,arguments)}:i.debugLog=function(){},i.isOpen=!1,i.isChangingConfiguration=!1,i.interfaceIdx=0,i.currentSioSetData=0,i.listeners={},i.setControlCommand=function(e,n,t,o){return i.device.controlTransferOut({requestType:"vendor",recipient:"device",request:e,value:n,index:t+i.interfaceIdx+0})},i.readHead=null}function r(e,n,t){this.host=n,this.device=e,this.cancelled=!1,this.debugLogger=t}function o(e){var n=this;if(null==e||"object"!==_typeof(e.device))throw new Error("Must specify a device");n.device=e.device,null!=e&&"boolean"==typeof e.debug&&e.debug?n.debugLog=function(){console.log.apply(this,arguments)}:n.debugLog=function(){},n.isOpen=!1,n.isChangingConfiguration=!1,n.listeners={},n.readHead=null}function n(e){var n=this;if(n.debugMode=!1,null!=e&&"boolean"==typeof e.debug&&(n.debugMode=e.debug),null!=e&&"object"===_typeof(e.device))if(1027===e.device.vendorId&&24577===e.device.productId)this.serial=new t({device:e.device,debug:n.debugMode});else{if(1240!==e.device.vendorId||83!==e.device.productId)throw new Error("Device's vendor ID and product ID do not match a TappyUSB");this.serial=new o({device:e.device,debug:n.debugMode})}else{if(null==e||"object"!==_typeof(e.serial))throw new Error("Must specify a TappyUSB device");this.serial=e.serial}this.isConnecting=!1,this.hasAttached=!1,this.disconnectImmediately=!1,this.disconnectCb=function(){},this.dataReceivedCallback=function(e){},this.errorCallback=function(e){},this.readCallback=function(e){n.dataReceivedCallback(new Uint8Array(e))}}return c.prototype.cancel=function(){this.cancelled=!0},c.prototype.readLoop=function(){var o=this;o.cancelled||o.device.transferIn(1,64).then(function(e){var n,t=new Uint8Array(e.data.buffer);2<t.length&&1===t[0]&&96===t[1]&&(o.debugLogger("emitted"),n=t.slice(2),o.host.emit("data",n)),setTimeout(function(){o.readLoop()},2===t.length?50:0)},function(e){o.cancelled||(o.debugLogger("recd error ",e),o.host.emit("error",e))}).catch(function(e){o.cancelled||(o.debugLogger("recd error ",e),o.host.emit("error",e))})},t.prototype.emit=function(e,n){var t=this;if("object"===_typeof(t.listeners[e]))for(var o=0;o<t.listeners[e].length;o++){var i=t.listeners[e][o];"function"==typeof i&&i(n)}},t.prototype.on=function(e,n){"function"==typeof n&&("object"!==_typeof(this.listeners[e])&&(this.listeners[e]=[]),this.listeners[e].push(n))},t.prototype.open=function(n){var e,t,o,i,r=this;r.isChangingConfiguration?(e=new Error("already changing device configuration"),r.emit("error",e),n(e)):r.isOpen?(t=new Error("serial port already open"),r.emit("error",t),n(t)):void 0!==r.device&&null!==r.device?(r.isChangingConfiguration=!0,o=function(e){r.debugLog(e),r.isOpen=!1,r.isChangingConfiguration=!1,r.emit("error",e),n(e)},r.device.open().then(function(){return 1===r.device.configuration.configurationValue?(r.debugLog("configuration value was 1"),{}):(r.debugLog("configuration value needed to be set"),r.device.setConfiguration(1))}).then(function(){return r.debugLog("claiming interface"),r.device.claimInterface(0)}).then(function(e){return r.debugLog("send SIO_RESET"),r.setControlCommand(0,0,0,null)}).then(function(e){return r.debugLog("send SIO_SET_DATA"),r.setControlCommand(4,8,0,null)}).then(function(e){return r.debugLog("send SIO_MODEL_CONTROL DEFAULT_1"),r.setControlCommand(1,257,0,null)}).then(function(e){return r.debugLog("send SIO_MODEM_CONTROL DEFAULT_2"),r.setControlCommand(1,514,0,null)}).then(function(e){return r.debugLog("send SIO_SET_FLOW_CONTROL"),r.setControlCommand(2,0,0,null)}).then(function(e){return r.debugLog("setting baud to 9600"),r.setControlCommand(3,16696,0,null)}).then(function(e){return r.debugLog("setting baud to 115200"),r.setControlCommand(3,26,0,null)}).then(function(e){return r.debugLog("setting data bits"),r.currentSioSetData&=-2,r.currentSioSetData&=-3,r.currentSioSetData&=-5,r.currentSioSetData|=8,r.setControlCommand(4,r.currentSioSetData,0,null)}).then(function(e){return r.debugLog("setting parity setting"),r.currentSioSetData&=-257,r.currentSioSetData&=-513,r.currentSioSetData&=-1025,r.setControlCommand(4,r.currentSioSetData,0,null)}).then(function(e){return r.debugLog("setting stop bit setting"),r.currentSioSetData&=-2049,r.currentSioSetData&=-4097,r.currentSioSetData&=-8193,r.setControlCommand(4,r.currentSioSetData,0,null)}).catch(function(e){r.debugLog("unable to configure device"),o(e)}).then(function(e){r.emit("open"),r.isOpen=!0,r.isChangingConfiguration=!1,r.readHead=new c(r.device,r,r.debugLog),r.readHead.readLoop(),n()}).catch(function(e){console.log("unable to read"),o(e)})):(i=new Error("no device"),r.emit("error",i),n(i))},t.prototype.write=function(e,n){var t=this;t.device.transferOut(2,e).then(function(e){n&&n(null)}).catch(function(e){n&&n(e),t.emit("error",e)})},t.prototype.close=function(n){var e,t,o=this;o.isChangingConfiguration?(e=new Error("device configuration is currently changing"),o.emit("error",e),n(e)):o.isOpen?(o.isChangingConfiguration=!0,null!==o.readHead&&(o.readHead.cancel(),o.readHead=null),o.device.close().then(function(e){o.currentSioSetData=0,o.isOpen=!1,o.isChangingConfiguration=!1,o.device=null,n&&n()}).catch(function(e){o.currentSioSetData=0,o.isOpen=!1,o.isChangingConfiguration=!1,o.device=null,o.emit("error",e),n&&n(e)})):(t=new Error("serial port is not open"),o.emit("error",t),n(t))},t.prototype.flush=function(e){e&&e()},t.prototype.drain=function(e){e&&e()},r.prototype.cancel=function(){this.cancelled=!0},r.prototype.readLoop=function(){var t=this;t.cancelled||t.device.transferIn(1,64).then(function(e){var n=new Uint8Array(e.data.buffer);t.host.emit("data",n),setTimeout(function(){t.readLoop()},0<n.length?0:5)},function(e){t.cancelled||(t.debugLogger(e),t.host.emit("error",e))}).catch(function(e){t.cancelled||(t.debugLogger(e),t.host.emit("error",e))})},o.prototype.emit=function(e,n){if("object"===_typeof(this.listeners[e]))for(var t=0;t<this.listeners[e].length;t++){var o=this.listeners[e][t];"function"==typeof o&&o(n)}},o.prototype.on=function(e,n){"function"==typeof n&&("object"!==_typeof(this.listeners[e])&&(this.listeners[e]=[]),this.listeners[e].push(n))},o.prototype.open=function(t){var e,n,o,i=this;i.isChangingConfiguration?(e=new Error("already changing device configuration"),i.emit("error",e),t(e)):i.isOpen?(n=new Error("serial port already open"),i.emit("error",n),t(n)):void 0!==i.device&&null!==i.device?(i.isChangingConfiguration=!0,i.device.open().then(function(){return i.device.selectConfiguration(1)}).then(function(){return i.device.claimInterface(0)}).then(function(e){i.emit("open"),i.isOpen=!0,i.isChangingConfiguration=!1,i.readHead=new r(i.device,i,i.debugLog),i.readHead.readLoop(),t()}).catch(function(e){var n;console.log("unable to read"),n=e,i.debugLog(n),i.isOpen=!1,i.isChangingConfiguration=!1,i.emit("error",n),t(n)})):(o=new Error("no device"),i.emit("error",o),t(o))},o.prototype.write=function(e,n){var t=this;t.device.transferOut(1,e).then(function(e){n&&n(null)}).catch(function(e){n&&n(e),t.emit("error",e)})},o.prototype.close=function(n){var e,t,o=this;o.isChangingConfiguration?(e=new Error("device configuration is currently changing"),o.emit("error",e),n(e)):o.isOpen?(o.isChangingConfiguration=!0,null!==o.readHead&&(o.readHead.cancel(),o.readHead=null),o.device.releaseInterface(0).then(function(){return o.device.close()}).then(function(e){o.isOpen=!1,o.isChangingConfiguration=!1,o.device=null,n&&n()}).catch(function(e){o.isOpen=!1,o.isChangingConfiguration=!1,o.device=null,o.emit("error",e),n&&n(e)})):(t=new Error("serial port is not open"),o.emit("error",t),n(t))},o.prototype.flush=function(e){e&&e()},o.prototype.drain=function(e){e&&e()},n.DEFAULT_FILTERS=e,n.prototype={attachReadWrite:function(){this.hasAttached||(this.hasAttached=!0,this.serial.on("data",this.readCallback))},connect:function(n){var t=this;t.isConnecting||t.isConnected()||(t.isConnecting=!0,t.serial.open(function(e){t.isConnecting=!1,t.attachReadWrite(),"function"==typeof n&&n(e),t.disconnectImmediately&&t.disconnectUnsafe()}))},flush:function(e){e()},isConnected:function(){return this.serial.isOpen},disconnectUnsafe:function(){var n=this;if(n.isConnecting)throw"Connection still in the process of being established";n.isConnected()&&n.serial.close(function(e){"function"==typeof n.disconnectCb&&n.disconnectCb(e)})},disconnect:function(e){var n=this;n.disconnectImmediately=!0,"function"==typeof e&&(n.disconnectCb=e),!n.isConnecting&&n.isConnected()&&n.disconnectUnsafe()},send:function(t){var o=this;o.serial.write(t,function(e){var n;e&&"function"==typeof o.errorCallback&&(n={buffer:t,nodeError:e},o.errorCallback(n))})},setDataCallback:function(e){this.dataReceivedCallback=e},setErrorCallback:function(e){this.errorCallback=e}},n});